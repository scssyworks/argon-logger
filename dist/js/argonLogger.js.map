{"version":3,"file":"argonLogger.js","sources":["../../src/polyfills/includes.ts","../../src/polyfills/find.ts","../../src/utils/index.ts","../../src/index.ts"],"sourcesContent":["export function includes(arr: string | any[], el: string | any): boolean {\n    return arr.indexOf(el) > -1;\n}","export function find<T>(arr: T[], cb: (item: T, index?: number) => boolean): T {\n    return arr.filter((item, index) => {\n        return cb(item, index);\n    })[0];\n}","function isObject(ob: any): any {\n    return ob && typeof ob === 'object';\n}\n\n/**\n * Returns true if input is an array\n * @param {any[]} arr Any array\n */\nexport function isArr(arr?: any[]): boolean {\n    return Array.isArray(arr);\n}\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref: any, target: any) {\n    if (isObject(ref)) {\n        Object.keys(ref).forEach(function (key) {\n            target[key] = ref[key];\n        });\n    }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign<T>(...args: T[]): T {\n    const target = isObject(args[0]) ? args[0] : {} as T;\n    for (let i = 1; i < args.length; i++) {\n        loopFunc(args[i], target);\n    }\n    return target;\n}","import { includes } from './polyfills/includes';\nimport { find } from './polyfills/find';\nimport { isArr, assign } from './utils';\n\ntype Config = {\n    allowedHostnames?: string[];\n    disable?: boolean;\n    allowedQueryStringParameters?: string[];\n    allowedPorts?: string[];\n    prefixes?: string[];\n};\n\ntype Param = {\n    key: string;\n    value: string | boolean;\n};\n\n/**\n * Tests if current host name matches allowed hostnames\n * @param {string} hostname Current hostname\n * @param {object} config Configuration\n */\nfunction matchesURL(hostname: string, config: Config): boolean {\n    const allowedHostnames = (isArr(config.allowedHostnames) ? config.allowedHostnames : []) as string[];\n    return (allowedHostnames.length === 0 || Boolean(find<string>(allowedHostnames, URL => (includes(URL, hostname)))));\n}\n\n/**\n * Checks if given port is allowed\n * @param {string} port Current port\n * @param {object} config Configuration\n */\nfunction matchesPort(port: string, config: Config): boolean {\n    let allowedPorts = (isArr(config.allowedPorts) ? config.allowedPorts : []) as string[];\n    allowedPorts = allowedPorts.map(port => (`${port}`).trim());\n    return (allowedPorts.length === 0 || includes(allowedPorts, port));\n}\n\n/**\n * Returns a map of query string key value pairs\n * @param {string} queryString Current query string\n */\nfunction getAllParams(queryString: string): Param[] {\n    queryString = queryString.substring(Number(queryString.charAt(0) === '?'));\n    return queryString.split('&').map(pairs => {\n        const pair = pairs.split('=').map(part => decodeURIComponent(part).trim());\n        return { key: pair[0], value: pair[1] };\n    });\n}\n\n/**\n * Alias for hasOwnProperty\n * @param {object} object Target object\n * @param {string} key Key name\n */\nfunction hasOwn(object: any, key: string): boolean {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n\n/**\n * Tests if any existing query parameter matches configuration\n * @param {string} queryString Query string\n * @param {object} config Configuration\n */\nfunction matchesQueryParam(queryString: string, config: Config): boolean {\n    const allowedQueryStringParameters = isArr(config.allowedQueryStringParameters) ? config.allowedQueryStringParameters : [];\n    const allParams = getAllParams(queryString);\n    const allowedParams = [] as Param[];\n    allowedQueryStringParameters?.forEach((param: string | Param) => {\n        if (typeof param === 'string') {\n            const pair = param.split('=');\n            allowedParams.push({ key: pair[0], value: typeof pair[1] === 'undefined' ? true : pair[1] });\n        } else if (\n            param\n            && typeof param === 'object'\n            && hasOwn(param, 'key')\n            && hasOwn(param, 'value') // Schema check\n        ) {\n            param.key = param.key.trim();\n            param.value = (`${param.value}`).trim();\n            allowedParams.push(param);\n        }\n    });\n    let result = false;\n    allowedParams.forEach(param => {\n        const currentResult = Boolean(find<Param>(allParams, queryParam => (\n            param.key === queryParam.key\n            && (param.value === queryParam.value || param.value === true)\n        )));\n        result = result || currentResult;\n    });\n    return result;\n}\n\n/**\n * Returns true if logging should allowed\n */\nfunction isLoggingAllowed(...args: any[]) {\n    const test = this.config.test;\n    const disable = this.config.disable;\n    const location = this.location;\n    if (typeof test === 'function') {\n        return test.apply(this.config, args);\n    }\n    return (\n        (typeof console !== 'undefined')\n        && (\n            (\n                matchesURL(location.hostname, this.config)\n                && matchesPort(location.port, this.config)\n            )\n            || matchesQueryParam(location.search, this.config)\n        )\n        && !disable\n    );\n}\n\nfunction rewireFunc(...args: any[]): void {\n    const fn = args.splice(0, 1)[0] as keyof Console;\n    const prefixes = this.config.prefixes;\n    args = prefixes.concat(args);\n    if (this.isLoggingAllowed(args) && console[fn]) {\n        let c;\n        (c = console)[fn].apply(c, args);\n    }\n}\n\nexport function autowire(_: unknown, propertyName: string, desc: PropertyDescriptor): PropertyDescriptor | void {\n    if (!(propertyName in console)) {\n        throw new Error(`Invalid console method: \"${propertyName}\"`);\n    }\n    return {\n        configurable: true,\n        enumerable: false,\n        get() {\n            const self = this;\n            return (function (...args: any[]) {\n                desc.value.apply(self, args);\n                rewireFunc.apply(self, [propertyName, ...args]);\n            }).bind(this);\n        }\n    } as PropertyDescriptor;\n}\n\n/**\n * Logger class\n * @class\n */\nexport class Logger {\n    config: Config;\n    location: Location;\n    URL: string;\n    constructor(config?: Config) {\n        config = config || {} as Config;\n        this.config = Object.freeze(assign<Config>({\n            allowedHostnames: ['localhost', '127.0.0.1', '0.0.0.0'],\n            disable: false,\n            allowedQueryStringParameters: ['debug'],\n            allowedPorts: [],\n            prefixes: []\n        }, config));\n        this.location = typeof window === 'undefined' ? {} as Location : window.location;\n        this.URL = this.location.href;\n    }\n    get self(): Logger {\n        return this;\n    }\n    isLoggingAllowed(args: any[]): boolean {\n        return isLoggingAllowed.apply(this, args);\n    }\n    protected rewire(method: keyof Console, ...args: any[]): void {\n        rewireFunc.apply(this.self, [method, ...args]);\n    }\n\n    @autowire\n    log(): void { }\n    @autowire\n    warn(): void { }\n    @autowire\n    debug(): void { }\n    @autowire\n    error(): void { }\n    @autowire\n    info(): void { }\n}"],"names":["includes","arr","el","indexOf","find","cb","filter","item","index","isObject","ob","isArr","Array","isArray","loopFunc","ref","target","Object","keys","forEach","key","assign","i","length","matchesURL","hostname","config","allowedHostnames","Boolean","URL","matchesPort","port","allowedPorts","map","trim","getAllParams","queryString","substring","Number","charAt","split","pairs","pair","part","decodeURIComponent","value","hasOwn","object","prototype","hasOwnProperty","call","matchesQueryParam","allowedQueryStringParameters","allParams","allowedParams","param","push","result","currentResult","queryParam","isLoggingAllowed","test","disable","location","args","apply","console","search","rewireFunc","fn","splice","prefixes","concat","c","autowire","_","propertyName","desc","Error","configurable","enumerable","get","self","bind","Logger","freeze","window","href","method"],"mappings":"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"}