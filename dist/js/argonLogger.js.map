{"version":3,"file":"argonLogger.js","sources":["../../src/polyfills/includes.ts","../../src/polyfills/find.ts","../../src/utils/index.ts","../../src/index.ts"],"sourcesContent":["export function includes(arr: string | any[], el: string | any): boolean {\n    return arr.indexOf(el) > -1;\n}","export function find<T>(arr: T[], cb: (item: T, index?: number) => boolean): T {\n    return arr.filter((item, index) => {\n        return cb(item, index);\n    })[0];\n}","function isObject(ob: any): any {\n    return ob && typeof ob === 'object';\n}\n\n/**\n * Returns true if input is an array\n * @param {any[]} arr Any array\n */\nexport function isArr(arr?: any[]): boolean {\n    return Array.isArray(arr);\n}\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref: any, target: any) {\n    if (isObject(ref)) {\n        Object.keys(ref).forEach(function (key) {\n            target[key] = ref[key];\n        });\n    }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign<T>(...args: T[]): T {\n    const target = isObject(args[0]) ? args[0] : {} as T;\n    for (let i = 1; i < args.length; i++) {\n        loopFunc(args[i], target);\n    }\n    return target;\n}","import { includes } from './polyfills/includes';\nimport { find } from './polyfills/find';\nimport { isArr, assign } from './utils';\n\ntype Config = {\n  allowedHostnames?: string[];\n  disable?: boolean;\n  allowedQueryStringParameters?: string[];\n  allowedPorts?: string[];\n  prefixes?: string[];\n};\n\ntype Param = {\n  key: string;\n  value: string | boolean;\n};\n\n/**\n * Tests if current host name matches allowed hostnames\n * @param {string} hostname Current hostname\n * @param {object} config Configuration\n */\nfunction matchesURL(hostname: string, config: Config): boolean {\n  const allowedHostnames = (\n    isArr(config.allowedHostnames) ? config.allowedHostnames : []\n  ) as string[];\n  return (\n    allowedHostnames.length === 0 ||\n    Boolean(find<string>(allowedHostnames, (URL) => includes(URL, hostname)))\n  );\n}\n\n/**\n * Checks if given port is allowed\n * @param {string} port Current port\n * @param {object} config Configuration\n */\nfunction matchesPort(port: string, config: Config): boolean {\n  let allowedPorts = (\n    isArr(config.allowedPorts) ? config.allowedPorts : []\n  ) as string[];\n  allowedPorts = allowedPorts.map((port) => `${port}`.trim());\n  return allowedPorts.length === 0 || includes(allowedPorts, port);\n}\n\n/**\n * Returns a map of query string key value pairs\n * @param {string} queryString Current query string\n */\nfunction getAllParams(queryString: string): Param[] {\n  queryString = queryString.substring(Number(queryString.charAt(0) === '?'));\n  return queryString.split('&').map((pairs) => {\n    const pair = pairs\n      .split('=')\n      .map((part) => decodeURIComponent(part).trim());\n    return { key: pair[0], value: pair[1] };\n  });\n}\n\n/**\n * Alias for hasOwnProperty\n * @param {object} object Target object\n * @param {string} key Key name\n */\nfunction hasOwn(object: any, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\n/**\n * Tests if any existing query parameter matches configuration\n * @param {string} queryString Query string\n * @param {object} config Configuration\n */\nfunction matchesQueryParam(queryString: string, config: Config): boolean {\n  const allowedQueryStringParameters = isArr(\n    config.allowedQueryStringParameters\n  )\n    ? config.allowedQueryStringParameters\n    : [];\n  const allParams = getAllParams(queryString);\n  const allowedParams = [] as Param[];\n  allowedQueryStringParameters?.forEach((param: string | Param) => {\n    if (typeof param === 'string') {\n      const pair = param.split('=');\n      allowedParams.push({\n        key: pair[0],\n        value: typeof pair[1] === 'undefined' ? true : pair[1],\n      });\n    } else if (\n      param &&\n      typeof param === 'object' &&\n      hasOwn(param, 'key') &&\n      hasOwn(param, 'value') // Schema check\n    ) {\n      param.key = param.key.trim();\n      param.value = `${param.value}`.trim();\n      allowedParams.push(param);\n    }\n  });\n  let result = false;\n  allowedParams.forEach((param) => {\n    const currentResult = Boolean(\n      find<Param>(\n        allParams,\n        (queryParam) =>\n          param.key === queryParam.key &&\n          (param.value === queryParam.value || param.value === true)\n      )\n    );\n    result = result || currentResult;\n  });\n  return result;\n}\n\n/**\n * Returns true if logging should allowed\n */\nfunction isLoggingAllowed(...args: any[]) {\n  const test = this.config.test;\n  const disable = this.config.disable;\n  const location = this.location;\n  if (typeof test === 'function') {\n    return test.apply(this.config, args);\n  }\n  return (\n    typeof console !== 'undefined' &&\n    ((matchesURL(location.hostname, this.config) &&\n      matchesPort(location.port, this.config)) ||\n      matchesQueryParam(location.search, this.config)) &&\n    !disable\n  );\n}\n\nfunction rewireFunc(fn: string, ...args: any[]): void {\n  const prefixes = this.config.prefixes;\n  args = prefixes.concat(args);\n  // eslint-disable-next-line\n  // @ts-ignore\n  if (this.isLoggingAllowed(args) && console[fn]) {\n    let c;\n    // eslint-disable-next-line\n    // @ts-ignore\n    (c = console)[fn].apply(c, args);\n  }\n}\n\nexport function autowire(\n  _: unknown,\n  propertyName: string,\n  desc: PropertyDescriptor\n): PropertyDescriptor | void {\n  if (!(propertyName in console)) {\n    throw new Error(`Invalid console method: \"${propertyName}\"`);\n  }\n  return {\n    configurable: true,\n    enumerable: false,\n    get() {\n      const self = this;\n      return function (...args: any[]) {\n        desc.value.apply(self, args);\n        rewireFunc.apply(self, [propertyName, ...args]);\n      }.bind(this);\n    },\n  } as PropertyDescriptor;\n}\n\n/**\n * Logger class\n * @class\n */\nexport class Logger {\n  config: Config;\n  location: Location;\n  URL: string;\n  constructor(config?: Config) {\n    config = config || ({} as Config);\n    this.config = Object.freeze(\n      assign<Config>(\n        {\n          allowedHostnames: ['localhost', '127.0.0.1', '0.0.0.0'],\n          disable: false,\n          allowedQueryStringParameters: ['debug'],\n          allowedPorts: [],\n          prefixes: [],\n        },\n        config\n      )\n    );\n    this.location =\n      typeof window === 'undefined' ? ({} as Location) : window.location;\n    this.URL = this.location.href;\n  }\n  get self(): Logger {\n    return this;\n  }\n  isLoggingAllowed(args: any[]): boolean {\n    return isLoggingAllowed.apply(this, args);\n  }\n  protected rewire(method: keyof Console, ...args: any[]): void {\n    rewireFunc.apply(this.self, [method, ...args]);\n  }\n\n  @autowire\n  log(): void {}\n  @autowire\n  warn(): void {}\n  @autowire\n  debug(): void {}\n  @autowire\n  error(): void {}\n  @autowire\n  info(): void {}\n}\n"],"names":["includes","arr","el","indexOf","find","cb","filter","item","index","isObject","ob","isArr","Array","isArray","loopFunc","ref","target","Object","keys","forEach","key","assign","i","length","matchesURL","hostname","config","allowedHostnames","Boolean","URL","matchesPort","port","allowedPorts","map","trim","getAllParams","queryString","substring","Number","charAt","split","pairs","pair","part","decodeURIComponent","value","hasOwn","object","prototype","hasOwnProperty","call","matchesQueryParam","allowedQueryStringParameters","allParams","allowedParams","param","push","result","currentResult","queryParam","isLoggingAllowed","test","disable","location","args","apply","console","search","rewireFunc","fn","prefixes","concat","c","autowire","_","propertyName","desc","Error","configurable","enumerable","get","self","bind","Logger","freeze","window","href","method"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAuCC,EAAvC,EAAkE;EACrE,SAAOD,GAAG,CAACE,OAAJ,CAAYD,EAAZ,IAAkB,CAAC,CAA1B;EACH;;ECFM,SAASE,IAAT,CAAiBH,GAAjB,EAA2BI,EAA3B,EAAwE;EAC3E,SAAOJ,GAAG,CAACK,MAAJ,CAAW,UAACC,IAAD,EAAOC,KAAP,EAAiB;EAC/B,WAAOH,EAAE,CAACE,IAAD,EAAOC,KAAP,CAAT;EACH,GAFM,EAEJ,CAFI,CAAP;EAGH;;ECJD,SAASC,QAAT,CAAkBC,EAAlB,EAAgC;EAC5B,SAAOA,EAAE,IAAI,QAAOA,EAAP,MAAc,QAA3B;EACH;EAED;EACA;EACA;EACA;;;EACO,SAASC,KAAT,CAAeV,GAAf,EAAqC;EACxC,SAAOW,KAAK,CAACC,OAAN,CAAcZ,GAAd,CAAP;EACH;EAED;EACA;EACA;EACA;EACA;EACA;;EACA,SAASa,QAAT,CAAkBC,GAAlB,EAA4BC,MAA5B,EAAyC;EACrC,MAAIP,QAAQ,CAACM,GAAD,CAAZ,EAAmB;EACfE,IAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyB,UAAUC,GAAV,EAAe;EACpCJ,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcL,GAAG,CAACK,GAAD,CAAjB;EACH,KAFD;EAGH;EACJ;EAED;EACA;EACA;EACA;EACA;;;EACO,SAASC,MAAT,GAAoC;EACvC,MAAML,MAAM,GAAGP,QAAQ,kDAAR,sDAA8B,EAA7C;;EACA,OAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,UAAKC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EAClCR,IAAAA,QAAQ,CAAMQ,CAAN,4BAAMA,CAAN,yBAAMA,CAAN,GAAUN,MAAV,CAAR;EACH;;EACD,SAAOA,MAAP;EACH;;;;ECpBD;EACA;EACA;EACA;EACA;EACA,SAASQ,UAAT,CAAoBC,QAApB,EAAsCC,MAAtC,EAA+D;EAC7D,MAAMC,gBAAgB,GACpBhB,KAAK,CAACe,MAAM,CAACC,gBAAR,CAAL,GAAiCD,MAAM,CAACC,gBAAxC,GAA2D,EAD7D;EAGA,SACEA,gBAAgB,CAACJ,MAAjB,KAA4B,CAA5B,IACAK,OAAO,CAACxB,IAAI,CAASuB,gBAAT,EAA2B,UAACE,GAAD;EAAA,WAAS7B,QAAQ,CAAC6B,GAAD,EAAMJ,QAAN,CAAjB;EAAA,GAA3B,CAAL,CAFT;EAID;EAED;EACA;EACA;EACA;EACA;;;EACA,SAASK,WAAT,CAAqBC,IAArB,EAAmCL,MAAnC,EAA4D;EAC1D,MAAIM,YAAY,GACdrB,KAAK,CAACe,MAAM,CAACM,YAAR,CAAL,GAA6BN,MAAM,CAACM,YAApC,GAAmD,EADrD;EAGAA,EAAAA,YAAY,GAAGA,YAAY,CAACC,GAAb,CAAiB,UAACF,IAAD;EAAA,WAAU,UAAGA,IAAH,EAAUG,IAAV,EAAV;EAAA,GAAjB,CAAf;EACA,SAAOF,YAAY,CAACT,MAAb,KAAwB,CAAxB,IAA6BvB,QAAQ,CAACgC,YAAD,EAAeD,IAAf,CAA5C;EACD;EAED;EACA;EACA;EACA;;;EACA,SAASI,YAAT,CAAsBC,WAAtB,EAAoD;EAClDA,EAAAA,WAAW,GAAGA,WAAW,CAACC,SAAZ,CAAsBC,MAAM,CAACF,WAAW,CAACG,MAAZ,CAAmB,CAAnB,MAA0B,GAA3B,CAA5B,CAAd;EACA,SAAOH,WAAW,CAACI,KAAZ,CAAkB,GAAlB,EAAuBP,GAAvB,CAA2B,UAACQ,KAAD,EAAW;EAC3C,QAAMC,IAAI,GAAGD,KAAK,CACfD,KADU,CACJ,GADI,EAEVP,GAFU,CAEN,UAACU,IAAD;EAAA,aAAUC,kBAAkB,CAACD,IAAD,CAAlB,CAAyBT,IAAzB,EAAV;EAAA,KAFM,CAAb;EAGA,WAAO;EAAEd,MAAAA,GAAG,EAAEsB,IAAI,CAAC,CAAD,CAAX;EAAgBG,MAAAA,KAAK,EAAEH,IAAI,CAAC,CAAD;EAA3B,KAAP;EACD,GALM,CAAP;EAMD;EAED;EACA;EACA;EACA;EACA;;;EACA,SAASI,MAAT,CAAgBC,MAAhB,EAA6B3B,GAA7B,EAAmD;EACjD,SAAOH,MAAM,CAAC+B,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCH,MAArC,EAA6C3B,GAA7C,CAAP;EACD;EAED;EACA;EACA;EACA;EACA;;;EACA,SAAS+B,iBAAT,CAA2Bf,WAA3B,EAAgDV,MAAhD,EAAyE;EACvE,MAAM0B,4BAA4B,GAAGzC,KAAK,CACxCe,MAAM,CAAC0B,4BADiC,CAAL,GAGjC1B,MAAM,CAAC0B,4BAH0B,GAIjC,EAJJ;EAKA,MAAMC,SAAS,GAAGlB,YAAY,CAACC,WAAD,CAA9B;EACA,MAAMkB,aAAa,GAAG,EAAtB;EACAF,EAAAA,4BAA4B,SAA5B,IAAAA,4BAA4B,WAA5B,YAAAA,4BAA4B,CAAEjC,OAA9B,CAAsC,UAACoC,KAAD,EAA2B;EAC/D,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;EAC7B,UAAMb,IAAI,GAAGa,KAAK,CAACf,KAAN,CAAY,GAAZ,CAAb;EACAc,MAAAA,aAAa,CAACE,IAAd,CAAmB;EACjBpC,QAAAA,GAAG,EAAEsB,IAAI,CAAC,CAAD,CADQ;EAEjBG,QAAAA,KAAK,EAAE,OAAOH,IAAI,CAAC,CAAD,CAAX,KAAmB,WAAnB,GAAiC,IAAjC,GAAwCA,IAAI,CAAC,CAAD;EAFlC,OAAnB;EAID,KAND,MAMO,IACLa,KAAK,IACL,QAAOA,KAAP,MAAiB,QADjB,IAEAT,MAAM,CAACS,KAAD,EAAQ,KAAR,CAFN,IAGAT,MAAM,CAACS,KAAD,EAAQ,OAAR,CAJD;EAAA,MAKL;EACAA,MAAAA,KAAK,CAACnC,GAAN,GAAYmC,KAAK,CAACnC,GAAN,CAAUc,IAAV,EAAZ;EACAqB,MAAAA,KAAK,CAACV,KAAN,GAAc,UAAGU,KAAK,CAACV,KAAT,EAAiBX,IAAjB,EAAd;EACAoB,MAAAA,aAAa,CAACE,IAAd,CAAmBD,KAAnB;EACD;EACF,GAjBD;EAkBA,MAAIE,MAAM,GAAG,KAAb;EACAH,EAAAA,aAAa,CAACnC,OAAd,CAAsB,UAACoC,KAAD,EAAW;EAC/B,QAAMG,aAAa,GAAG9B,OAAO,CAC3BxB,IAAI,CACFiD,SADE,EAEF,UAACM,UAAD;EAAA,aACEJ,KAAK,CAACnC,GAAN,KAAcuC,UAAU,CAACvC,GAAzB,KACCmC,KAAK,CAACV,KAAN,KAAgBc,UAAU,CAACd,KAA3B,IAAoCU,KAAK,CAACV,KAAN,KAAgB,IADrD,CADF;EAAA,KAFE,CADuB,CAA7B;EAQAY,IAAAA,MAAM,GAAGA,MAAM,IAAIC,aAAnB;EACD,GAVD;EAWA,SAAOD,MAAP;EACD;EAED;EACA;EACA;;;EACA,SAASG,iBAAT,GAA0C;EACxC,MAAMC,IAAI,GAAG,KAAKnC,MAAL,CAAYmC,IAAzB;EACA,MAAMC,OAAO,GAAG,KAAKpC,MAAL,CAAYoC,OAA5B;EACA,MAAMC,QAAQ,GAAG,KAAKA,QAAtB;;EACA,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;EAAA,sCAJLG,IAIK;EAJLA,MAAAA,IAIK;EAAA;;EAC9B,WAAOH,IAAI,CAACI,KAAL,CAAW,KAAKvC,MAAhB,EAAwBsC,IAAxB,CAAP;EACD;;EACD,SACE,OAAOE,OAAP,KAAmB,WAAnB,KACE1C,UAAU,CAACuC,QAAQ,CAACtC,QAAV,EAAoB,KAAKC,MAAzB,CAAV,IACAI,WAAW,CAACiC,QAAQ,CAAChC,IAAV,EAAgB,KAAKL,MAArB,CADZ,IAECyB,iBAAiB,CAACY,QAAQ,CAACI,MAAV,EAAkB,KAAKzC,MAAvB,CAHnB,KAIA,CAACoC,OALH;EAOD;;EAED,SAASM,UAAT,CAAoBC,EAApB,EAAsD;EAAA,qCAAnBL,IAAmB;EAAnBA,IAAAA,IAAmB;EAAA;;EACpD,MAAMM,QAAQ,GAAG,KAAK5C,MAAL,CAAY4C,QAA7B;EACAN,EAAAA,IAAI,GAAGM,QAAQ,CAACC,MAAT,CAAgBP,IAAhB,CAAP,CAFoD;EAIpD;;EACA,MAAI,KAAKJ,gBAAL,CAAsBI,IAAtB,KAA+BE,OAAO,CAACG,EAAD,CAA1C,EAAgD;EAC9C,QAAIG,CAAJ,CAD8C;EAG9C;;EACA,KAACA,CAAC,GAAGN,OAAL,EAAcG,EAAd,EAAkBJ,KAAlB,CAAwBO,CAAxB,EAA2BR,IAA3B;EACD;EACF;;EAEM,SAASS,QAAT,CACLC,CADK,EAELC,YAFK,EAGLC,IAHK,EAIsB;EAC3B,MAAI,EAAED,YAAY,IAAIT,OAAlB,CAAJ,EAAgC;EAC9B,UAAM,IAAIW,KAAJ,qCAAsCF,YAAtC,QAAN;EACD;;EACD,SAAO;EACLG,IAAAA,YAAY,EAAE,IADT;EAELC,IAAAA,UAAU,EAAE,KAFP;EAGLC,IAAAA,GAHK,iBAGC;EACJ,UAAMC,IAAI,GAAG,IAAb;EACA,aAAO,YAA0B;EAAA,2CAAbjB,IAAa;EAAbA,UAAAA,IAAa;EAAA;;EAC/BY,QAAAA,IAAI,CAAC/B,KAAL,CAAWoB,KAAX,CAAiBgB,IAAjB,EAAuBjB,IAAvB;EACAI,QAAAA,UAAU,CAACH,KAAX,CAAiBgB,IAAjB,GAAwBN,YAAxB,SAAyCX,IAAzC;EACD,OAHM,CAGLkB,IAHK,CAGA,IAHA,CAAP;EAID;EATI,GAAP;EAWD;EAED;EACA;EACA;EACA;;MACaC,MAAb;EAIE,kBAAYzD,MAAZ,EAA6B;EAAA;;EAAA;;EAAA;;EAAA;;EAC3BA,IAAAA,MAAM,GAAGA,MAAM,IAAK,EAApB;EACA,SAAKA,MAAL,GAAcT,MAAM,CAACmE,MAAP,CACZ/D,MAAM,CACJ;EACEM,MAAAA,gBAAgB,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,CADpB;EAEEmC,MAAAA,OAAO,EAAE,KAFX;EAGEV,MAAAA,4BAA4B,EAAE,CAAC,OAAD,CAHhC;EAIEpB,MAAAA,YAAY,EAAE,EAJhB;EAKEsC,MAAAA,QAAQ,EAAE;EALZ,KADI,EAQJ5C,MARI,CADM,CAAd;EAYA,SAAKqC,QAAL,GACE,OAAOsB,MAAP,KAAkB,WAAlB,GAAiC,EAAjC,GAAmDA,MAAM,CAACtB,QAD5D;EAEA,SAAKlC,GAAL,GAAW,KAAKkC,QAAL,CAAcuB,IAAzB;EACD;;EArBH;EAAA;EAAA,SAsBE,eAAmB;EACjB,aAAO,IAAP;EACD;EAxBH;EAAA;EAAA,WAyBE,0BAAiBtB,IAAjB,EAAuC;EACrC,aAAOJ,iBAAgB,CAACK,KAAjB,CAAuB,IAAvB,EAA6BD,IAA7B,CAAP;EACD;EA3BH;EAAA;EAAA,WA4BE,gBAAiBuB,MAAjB,EAA8D;EAAA,yCAAnBvB,IAAmB;EAAnBA,QAAAA,IAAmB;EAAA;;EAC5DI,MAAAA,UAAU,CAACH,KAAX,CAAiB,KAAKgB,IAAtB,GAA6BM,MAA7B,SAAwCvB,IAAxC;EACD;EA9BH;EAAA;EAAA,WAgCE,eACY;EAjCd;EAAA;EAAA,WAkCE,gBACa;EAnCf;EAAA;EAAA,WAoCE,iBACc;EArChB;EAAA;EAAA,WAsCE,iBACc;EAvChB;EAAA;EAAA,WAwCE,gBACa;EAzCf;;EAAA;EAAA,0DAgCGS,QAhCH,qIAkCGA,QAlCH,uIAoCGA,QApCH,wIAsCGA,QAtCH,uIAwCGA,QAxCH;;;;;;;;;;;"}